{
  "name": "randomatic",
  "description": "Generate randomized strings of a specified length from patterns of numeric, alpha-numeric, alphabetical, special or custom characters.",
  "version": "0.1.4",
  "homepage": "https://github.com/jonschlinkert/randomatic",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jonschlinkert/randomatic.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/randomatic/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/randomatic/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "keywords": [
    "alpha",
    "alpha-numeric",
    "alphanumeric",
    "characters",
    "chars",
    "numeric",
    "rand",
    "random",
    "randomize",
    "randomized"
  ],
  "devDependencies": {
    "chai": "~1.9.1",
    "mocha": "~1.18.2",
    "verb": "~0.2.5"
  },
  "readme": "# randomatic [![NPM version](https://badge.fury.io/js/randomatic.png)](http://badge.fury.io/js/randomatic)\n\n> Generate randomized strings of a specified length from patterns of numeric, alpha-numeric, alphabetical, special or custom characters.\n\n## Quickstart\n\n### [npm](https://npmjs.org/)\n\n```bash\nnpm i randomatic --save\n```\n\n### [bower](https://github.com/bower/bower)\n\n```bash\nbower install randomatic --save\n```\n\n## Tests\n\nRun the tests\n\n```bash\nmocha\n```\n\n## Documentation\n\n```js\nvar randomize = require('randomatic');\n```\n\n### Params\n\nThe following parameters can be passed (`randomize(Pattern, Length, Options)`)\n\n#### pattern\nType: `String` (required)\n\nDefault: `undefined`\n\n* `a`: Lowercase alpha characters (`abcdefghijklmnopqrstuvwxyz'`)\n* `A`: Uppercase alpha characters (`ABCDEFGHIJKLMNOPQRSTUVWXYZ'`)\n* `0`: Numeric characters (`0123456789'`)\n* `!`: Special characters (`~!@#$%^&()_+-={}[];\\',.`)\n* `*`: All characters (all of the above combined)\n* `?`: Custom characters (pass a string of custom characters to the options)\n\nPatterns can contain any combination of the above characters, in any order. For example, `randomize('Aa0!', 10)` will generate a 10-character randomized string with all of the specified patterns.\n\n#### length\nType: `Number` (optional)\n\nDefault: `undefined`\n\nSpecify the number of characters/digits to generate in the output.\n\nExamples:\n\n* `randomize('A', 5)` will generate a 5-character, uppercase, alphabetical, randomized string, e.g. `KDJWJ`.\n* `randomize('0', 2)` will generate a 2-digit random number\n* `randomize('0', 3)` will generate a 3-digit random number\n* `randomize('0', 12)` will generate a 12-digit random number\n* `randomize('A0', 16)` will generate a 16-character, alpha-numeric randomized string\n\nIf `length` is left undefined, the length of the pattern in the first parameter will be used. For example:\n\n* `randomize('00')` will generate a 2-digit random number\n* `randomize('000')` will generate a 3-digit random number\n* `randomize('0000')` will generate a 4-digit random number...\n* `randomize('AAAAA')` will generate a 5-character, uppercase alphabetical random string...\n\n...and so on.\n\n#### options\nType: `Object` (optional)\n\nDefault: `undefined`\n\nCurrently the only option is `chars`, which allows you to define a custom string to be randomized. For example:\n\n* `randomize('?', 20, {chars: 'jonschlinkert'})` will generate a 20-character randomized string from the letters contained in `jonschlinkert`.\n* `randomize('?', {chars: 'jonschlinkert'})` will generate a 13-character randomized string from the letters contained in `jonschlinkert`.\n\n\n## Usage Examples\n\n* `randomize('A', 4)` (_whitespace insenstive_) would result in randomized 4-digit uppercase letters, like, `ZAKH`, `UJSL`... and so on.\n* `randomize('AAAA')` is equivelant to `randomize('A', 4)`\n* `randomize('AAA0')` and `randomize('AA00')` and `randomize('A0A0')` are equivelant to `randomize('A0', 4)`\n* `randomize('aa')`: results in double-digit, randomized, lower-case letters (`abcdefghijklmnopqrstuvwxyz`)\n* `randomize('AAA')`: results in triple-digit, randomized, upper-case letters (`ABCDEFGHIJKLMNOPQRSTUVWXYZ`)\n* `randomize('0', 6)`: results in six-digit, randomized nubmers (`0123456789`)\n* `randomize('!', 5)`: results in single-digit randomized, _valid_ non-letter characters (`~!@#$%^&()_+-={}[];\\',.`)\n* `randomize('A!a0', 9)`: results in nine-digit, randomized characters (any of the above)\n\n_The order in which the characters are provided has no impact on the outcome._\n\n## Contributing\nFind a bug? Have a feature request? Please [create an Issue](https://github.com/jonschlinkert/randomatic/issues).\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality,\nand run `docs` in the command line to build the docs with [Verb](https://github.com/assemble/verb).\n\nPull requests are also encouraged, and if you find this project useful please consider \"starring\" it to show your support! Thanks!\n\n## Authors\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\nCopyright (c) 2014 Jon Schlinkert, contributors.  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on May 19, 2014._",
  "readmeFilename": "README.md",
  "_id": "randomatic@0.1.4",
  "_shasum": "f98c22fbbe1bfe1ee0fa79a0738763e8d660d7d2",
  "_from": "randomatic@~0.1.0",
  "_resolved": "https://registry.npmjs.org/randomatic/-/randomatic-0.1.4.tgz"
}
